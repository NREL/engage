[
  {
    "pk": 2,
    "model": "api.group_constraint",
    "fields": {
      "name": "demand_share_min",
      "pretty_name": "Demand Share Min",
      "description": "Minimum share of carrier demand met from a set of technologies across a set of locations, on average over the entire model period.",
      "equations": [
        {
          "expression": "sum(flow_out_non_transmission_techs[||techs_lhs||||nodes_lhs||||carriers_lhs||], over=[nodes, techs, timesteps, carriers]) >= $total_demand_share"
        }
      ],
      "slices": {
        "techs_lhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "techs"
        },
        "techs_rhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "techs"
        },
        "nodes_lhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "nodes"
        },
        "nodes_rhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "nodes"
        },
        "carriers_lhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "carriers"
        },
        "carriers_rhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "carriers"
        }
      },
      "sub_expression": {
        "total_demand_share": {
          "yaml": [
            {
              "expression": "sum(flow_in_demand_techs[||techs_rhs||||nodes_rhs||||carriers_rhs||], over=[nodes, techs, timesteps, carriers]) * $value_1"
            }
          ],
          "show": false
        },
        "value_1": {
          "yaml": [
            {
              "expression": "VALUE"
            }
          ],
          "show": true,
          "required": true
        }
      }
    }
  },
  {
    "pk": 3,
    "model": "api.group_constraint",
    "fields": {
      "name": "demand_share_max",
      "pretty_name": "Demand Share Max",
      "description": "Maximum share of carrier demand met from a set of technologies across a set of locations, on average over the entire model period.",
      "equations": [
        {
          "expression": "sum(flow_out_non_transmission_techs[||techs_lhs||||nodes_lhs||||carriers_lhs||], over=[nodes, techs, timesteps, carriers]) <= $total_demand_share"
        }
      ],
      "slices": {
        "techs_lhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "techs"
        },
        "techs_rhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "techs"
        },
        "nodes_lhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "nodes"
        },
        "nodes_rhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "nodes"
        },
        "carriers_lhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "carriers"
        },
        "carriers_rhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "carriers"
        }
      },
      "sub_expression": {
        "total_demand_share": {
          "yaml": [
            {
              "expression": "sum(flow_in_demand_techs[||techs_rhs||||nodes_rhs||||carriers_rhs||], over=[nodes, techs, timesteps, carriers]) * $value_1"
            }
          ],
          "show": false
        },
        "value_1": {
          "yaml": [
            {
              "expression": "VALUE"
            }
          ],
          "show": true,
          "required": true
        }
      }
    }
  },
  {
    "pk": 4,
    "model": "api.group_constraint",
    "fields": {
      "name": "demand_share_equals",
      "pretty_name": "Demand Share Equals",
      "description": "Share of carrier demand met from a set of technologies across a set of locations, on average over the entire model period.",
      "equations": [
        {
          "expression": "sum(flow_out_non_transmission_techs[||techs_lhs||||nodes_lhs||||carriers_lhs||], over=[nodes, techs, timesteps, carriers]) == $total_demand_share"
        }
      ],
      "slices": {
        "techs_lhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "techs"
        },
        "techs_rhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "techs"
        },
        "nodes_lhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "nodes"
        },
        "nodes_rhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "nodes"
        },
        "carriers_lhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "carriers"
        },
        "carriers_rhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "carriers"
        }
      },
      "sub_expression": {
        "total_demand_share": {
          "yaml": [
            {
              "expression": "sum(flow_in_demand_techs[||techs_rhs||||nodes_rhs||||carriers_rhs||], over=[nodes, techs, timesteps, carriers]) * $value_1"
            }
          ],
          "show": false
        },
        "value_1": {
          "yaml": [
            {
              "expression": "VALUE"
            }
          ],
          "show": true,
          "required": true
        }
      }
    }
  },
  {
    "pk": 5,
    "model": "api.group_constraint",
    "fields": {
      "name": "demand_share_per_timestep_min",
      "pretty_name": "Demand Share Per Timestep Min",
      "description": "Minimum share of carrier demand met from a set of technologies across a set of locations, in each individual timestep.",
      "for_each": "timesteps",
      "equations": [
        {
          "expression": "sum(flow_out_non_transmission_techs[||techs_lhs||||nodes_lhs||||carriers_lhs||], over=[nodes, techs, carriers]) >= $total_demand_share"
        }
      ],
      "slices": {
        "techs_lhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "techs"
        },
        "techs_rhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "techs"
        },
        "nodes_lhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "nodes"
        },
        "nodes_rhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "nodes"
        },
        "carriers_lhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "carriers"
        },
        "carriers_rhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "carriers"
        }
      },
      "sub_expression": {
        "total_demand_share": {
          "yaml": [
            {
              "expression": "sum(flow_in_demand_techs[||techs_rhs||||nodes_rhs||||carriers_rhs||], over=[nodes, techs, carriers]) * $value_1"
            }
          ],
          "show": false
        },
        "value_1": {
          "yaml": [
            {
              "expression": "VALUE"
            }
          ],
          "show": true,
          "required": true
        }
      }
    }
  },
  {
    "pk": 6,
    "model": "api.group_constraint",
    "fields": {
      "name": "demand_share_per_timestep_max",
      "pretty_name": "Demand Share Per Timestep Max",
      "description": "Maximum share of carrier demand met from a set of technologies across a set of locations, in each individual timestep.",
      "for_each": "timesteps",
      "equations": [
        {
          "expression": "sum(flow_out_non_transmission_techs[||techs_lhs||||nodes_lhs||||carriers_lhs||], over=[nodes, techs, carriers]) <= $total_demand_share"
        }
      ],
      "slices": {
        "techs_lhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "techs"
        },
        "techs_rhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "techs"
        },
        "nodes_lhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "nodes"
        },
        "nodes_rhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "nodes"
        },
        "carriers_lhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "carriers"
        },
        "carriers_rhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "carriers"
        }
      },
      "sub_expression": {
        "total_demand_share": {
          "yaml": [
            {
              "expression": "sum(flow_in_demand_techs[||techs_rhs||||nodes_rhs||||carriers_rhs||], over=[nodes, techs, carriers]) * $value_1"
            }
          ],
          "show": false
        },
        "value_1": {
          "yaml": [
            {
              "expression": "VALUE"
            }
          ],
          "show": true,
          "required": true
        }
      }
    }
  },
  {
    "pk": 7,
    "model": "api.group_constraint",
    "fields": {
      "name": "demand_share_per_timestep_equals",
      "pretty_name": "Demand Share Per Timestep Equals",
      "description": "Share of carrier demand met from a set of technologies across a set of locations, in each individual timestep.",
      "for_each": "timesteps",
      "equations": [
        {
          "expression": "sum(flow_out_non_transmission_techs[||techs_lhs||||nodes_lhs||||carriers_lhs||], over=[nodes, techs, carriers]) == $total_demand_share"
        }
      ],
      "slices": {
        "techs_lhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "techs"
        },
        "techs_rhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "techs"
        },
        "nodes_lhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "nodes"
        },
        "nodes_rhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "nodes"
        },
        "carriers_lhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "carriers"
        },
        "carriers_rhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "carriers"
        }
      },
      "sub_expression": {
        "total_demand_share": {
          "yaml": [
            {
              "expression": "sum(flow_in_demand_techs[||techs_rhs||||nodes_rhs||||carriers_rhs||], over=[nodes, techs, carriers]) * $value_1"
            }
          ],
          "show": false
        },
        "value_1": {
          "yaml": [
            {
              "expression": "VALUE"
            }
          ],
          "show": true,
          "required": true
        }
      }
    }
  },
  {
    "pk": 1,
    "model": "api.group_constraint",
    "fields": {
      "name": "flow_out_share_max",
      "pretty_name": "Flow Out Share Max",
      "description": "Maximum share of carrier production met from a set of technologies across a set of locations, on average over the entire model period.",
      "equations": [
        {
          "expression": "sum(flow_out_non_transmission_techs[||techs_lhs||||nodes_lhs||||carriers_lhs||], over=[nodes, techs, timesteps, carriers]) <= $total_flow_out_share"
        }
      ],
      "slices": {
        "techs_lhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "techs"
        },
        "techs_rhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "techs"
        },
        "nodes_lhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "nodes"
        },
        "nodes_rhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "nodes"
        },
        "carriers_lhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "carriers"
        },
        "carriers_rhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "carriers"
        }
      },
      "sub_expression": {
        "total_flow_out_share": {
          "yaml": [
            {
              "expression": "sum(flow_out_non_transmission_techs[||techs_rhs||||nodes_rhs||||carriers_rhs||], over=[nodes, techs, timesteps, carriers]) * $value_1"
            }
          ],
          "show": false
        },
        "value_1": {
          "yaml": [
            {
              "expression": "VALUE"
            }
          ],
          "show": true,
          "required": true
        }
      }
    }
  },
  {
    "pk": 9,
    "model": "api.group_constraint",
    "fields": {
      "name": "flow_out_share_min",
      "pretty_name": "Flow Out Share Min",
      "description": "Minimum share of carrier production met from a set of technologies across a set of locations, on average over the entire model period.",
      "equations": [
        {
          "expression": "sum(flow_out_non_transmission_techs[||techs_lhs||||nodes_lhs||||carriers_lhs||], over=[nodes, techs, timesteps, carriers]) >= $total_flow_out_share"
        }
      ],
      "slices": {
        "techs_lhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "techs"
        },
        "techs_rhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "techs"
        },
        "nodes_lhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "nodes"
        },
        "nodes_rhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "nodes"
        },
        "carriers_lhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "carriers"
        },
        "carriers_rhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "carriers"
        }
      },
      "sub_expression": {
        "total_flow_out_share": {
          "yaml": [
            {
              "expression": "sum(flow_out_non_transmission_techs[||techs_rhs||||nodes_rhs||||carriers_rhs||], over=[nodes, techs, timesteps, carriers]) * $value_1"
            }
          ],
          "show": false
        },
        "value_1": {
          "yaml": [
            {
              "expression": "VALUE"
            }
          ],
          "show": true,
          "required": true
        }
      }
    }
  },
  {
    "pk": 11,
    "model": "api.group_constraint",
    "fields": {
      "name": "flow_out_share_equals",
      "pretty_name": "Flow Out Share Equals",
      "description": "Share of carrier production met from a set of technologies across a set of locations, on average over the entire model period.",
      "equations": [
        {
          "expression": "sum(flow_out_non_transmission_techs[||techs_lhs||||nodes_lhs||||carriers_lhs||], over=[nodes, techs, timesteps, carriers]) == $total_flow_out_share"
        }
      ],
      "slices": {
        "techs_lhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "techs"
        },
        "techs_rhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "techs"
        },
        "nodes_lhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "nodes"
        },
        "nodes_rhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "nodes"
        },
        "carriers_lhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "carriers"
        },
        "carriers_rhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "carriers"
        }
      },
      "sub_expression": {
        "total_flow_out_share": {
          "yaml": [
            {
              "expression": "sum(flow_out_non_transmission_techs[||techs_rhs||||nodes_rhs||||carriers_rhs||], over=[nodes, techs, timesteps, carriers]) * $value_1"
            }
          ],
          "show": false
        },
        "value_1": {
          "yaml": [
            {
              "expression": "VALUE"
            }
          ],
          "show": true,
          "required": true
        }
      }
    }
  },
  {
    "pk": 12,
    "model": "api.group_constraint",
    "fields": {
      "name": "flow_out_share_per_timestep_min",
      "pretty_name": "Flow Out Share Per Timestep Min",
      "description": "Minimum share of carrier production met from a set of technologies across a set of locations, in each individual timestep.",
      "for_each": "timesteps",
      "equations": [
        {
          "expression": "sum(flow_out_non_transmission_techs[||techs_lhs||||nodes_lhs||||carriers_lhs||], over=[nodes, techs, carriers]) >= $total_flow_out_share"
        }
      ],
      "slices": {
        "techs_lhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "techs"
        },
        "techs_rhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "techs"
        },
        "nodes_lhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "nodes"
        },
        "nodes_rhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "nodes"
        },
        "carriers_lhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "carriers"
        },
        "carriers_rhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "carriers"
        }
      },
      "sub_expression": {
        "total_flow_out_share": {
          "yaml": [
            {
              "expression": "sum(flow_out_non_transmission_techs[||techs_rhs||||nodes_rhs||||carriers_rhs||], over=[nodes, techs, carriers]) * $value_1"
            }
          ],
          "show": false
        },
        "value_1": {
          "yaml": [
            {
              "expression": "VALUE"
            }
          ],
          "show": true,
          "required": true
        }
      }
    }
  },
  {
    "pk": 13,
    "model": "api.group_constraint",
    "fields": {
      "name": "flow_out_share_per_timestep_max",
      "pretty_name": "Flow Out Share Per Timestep Max",
      "description": "Maximum share of carrier production met from a set of technologies across a set of locations, in each individual timestep.",
      "for_each": "timesteps",
      "equations": [
        {
          "expression": "sum(flow_out_non_transmission_techs[||techs_lhs||||nodes_lhs||||carriers_lhs||], over=[nodes, techs, carriers]) <= $total_flow_out_share"
        }
      ],
      "slices": {
        "techs_lhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "techs"
        },
        "techs_rhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "techs"
        },
        "nodes_lhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "nodes"
        },
        "nodes_rhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "nodes"
        },
        "carriers_lhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "carriers"
        },
        "carriers_rhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "carriers"
        }
      },
      "sub_expression": {
        "total_flow_out_share": {
          "yaml": [
            {
              "expression": "sum(flow_out_non_transmission_techs[||techs_rhs||||nodes_rhs||||carriers_rhs||], over=[nodes, techs, carriers]) * $value_1"
            }
          ],
          "show": false
        },
        "value_1": {
          "yaml": [
            {
              "expression": "VALUE"
            }
          ],
          "show": true,
          "required": true
        }
      }
    }
  },
  {
    "pk": 14,
    "model": "api.group_constraint",
    "fields": {
      "name": "flow_out_share_per_timestep_equals",
      "pretty_name": "Flow Out Share Per Timestep Equals",
      "description": "Share of carrier production met from a set of technologies across a set of locations, in each individual timestep.",
      "for_each": "timesteps",
      "equations": [
        {
          "expression": "sum(flow_out_non_transmission_techs[||techs_lhs||||nodes_lhs||||carriers_lhs||], over=[nodes, techs, carriers]) == $total_flow_out_share"
        }
      ],
      "slices": {
        "techs_lhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "techs"
        },
        "techs_rhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "techs"
        },
        "nodes_lhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "nodes"
        },
        "nodes_rhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "nodes"
        },
        "carriers_lhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "carriers"
        },
        "carriers_rhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "carriers"
        }
      },
      "sub_expression": {
        "total_flow_out_share": {
          "yaml": [
            {
              "expression": "sum(flow_out_non_transmission_techs[||techs_rhs||||nodes_rhs||||carriers_rhs||], over=[nodes, techs, carriers]) * $value_1"
            }
          ],
          "show": false
        },
        "value_1": {
          "yaml": [
            {
              "expression": "VALUE"
            }
          ],
          "show": true,
          "required": true
        }
      }
    }
  },
  {
    "pk": 15,
    "model": "api.group_constraint",
    "fields": {
      "name": "net_import_share_min",
      "pretty_name": "Net Import Share Min",
      "description": "Minimum share of demand met from transmission technologies into a set of locations, on average over the entire model period. All transmission technologies of the chosen carrier are added automatically and technologies must thus not be defined explicitly.",
      "equations": [
        {
          "expression": "sum(flow_out_non_transmission_techs[||nodes_lhs||||carriers_lhs||], over=[nodes, techs, timesteps, carriers]) <= $total_flow_out_share"
        }
      ],
      "slices": {
        "techs_rhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "techs"
        },
        "nodes_lhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "nodes"
        },
        "nodes_rhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "nodes"
        },
        "carriers_lhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "carriers"
        },
        "carriers_rhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "carriers"
        }
      },
      "sub_expression": {
        "total_flow_out_share": {
          "yaml": [
            {
              "expression": "sum(flow_in_demand_techs[||techs_rhs||||nodes_rhs||||carriers_rhs||], over=[nodes, techs, timesteps, carriers]) * (1.0-$value_1)"
            }
          ],
          "show": false
        },
        "value_1": {
          "yaml": [
            {
              "expression": "VALUE"
            }
          ],
          "show": true,
          "required": true
        }
      }
    }
  },
  {
    "pk": 16,
    "model": "api.group_constraint",
    "fields": {
      "name": "net_import_share_max",
      "pretty_name": "Net Import Share Max",
      "description": "Maximum share of demand met from transmission technologies into a set of locations, on average over the entire model period. All transmission technologies of the chosen carrier are added automatically and technologies must thus not be defined explicitly.",
      "equations": [
        {
          "expression": "sum(flow_out_non_transmission_techs[||nodes_lhs||||carriers_lhs||], over=[nodes, techs, timesteps, carriers]) >= $total_flow_out_share"
        }
      ],
      "slices": {
        "techs_rhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "techs"
        },
        "nodes_lhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "nodes"
        },
        "nodes_rhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "nodes"
        },
        "carriers_lhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "carriers"
        },
        "carriers_rhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "carriers"
        }
      },
      "sub_expression": {
        "total_flow_out_share": {
          "yaml": [
            {
              "expression": "sum(flow_in_demand_techs[||techs_rhs||||nodes_rhs||||carriers_rhs||], over=[nodes, techs, timesteps, carriers]) * (1.0-$value_1)"
            }
          ],
          "show": false
        },
        "value_1": {
          "yaml": [
            {
              "expression": "VALUE"
            }
          ],
          "show": true,
          "required": true
        }
      }
    }
  },
  {
    "pk": 17,
    "model": "api.group_constraint",
    "fields": {
      "name": "net_import_share_equals",
      "pretty_name": "Net Import Share Equals",
      "description": "Share of demand met from transmission technologies into a set of locations, on average over the entire model. All transmission technologies of the chosen carrier are added automatically and technologies must thus not be defined explicitly.",
      "equations": [
        {
          "expression": "sum(flow_out_non_transmission_techs[||nodes_lhs||||carriers_lhs||], over=[nodes, techs, timesteps, carriers]) == $total_flow_out_share"
        }
      ],
      "slices": {
        "techs_rhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "techs"
        },
        "nodes_lhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "nodes"
        },
        "nodes_rhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "nodes"
        },
        "carriers_lhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "carriers"
        },
        "carriers_rhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "carriers"
        }
      },
      "sub_expression": {
        "total_flow_out_share": {
          "yaml": [
            {
              "expression": "sum(flow_in_demand_techs[||techs_rhs||||nodes_rhs||||carriers_rhs||], over=[nodes, techs, timesteps, carriers]) * (1.0-$value_1)"
            }
          ],
          "show": false
        },
        "value_1": {
          "yaml": [
            {
              "expression": "VALUE"
            }
          ],
          "show": true,
          "required": true
        }
      }
    }
  },
  {
    "pk": 18,
    "model": "api.group_constraint",
    "fields": {
      "name": "flow_out_min",
      "pretty_name": "Flow Out Min",
      "description": "Minimum absolute sum of supplied energy (flow_out) over all timesteps for a set of technologies across a set of locations.",
      "equations": [
        {
          "expression": "sum(flow_out_non_transmission_techs[||techs||||nodes||||carriers||], over=[nodes, techs, timesteps, carriers]) >= $value_1"
        }
      ],
      "slices": {
        "techs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "techs"
        },
        "nodes": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "nodes"
        },
        "carriers": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "carriers"
        }
      },
      "sub_expression": {
        "value_1": {
          "yaml": [
            {
              "expression": "VALUE"
            }
          ],
          "show": true,
          "required": true
        }
      }
    }
  },
  {
    "pk": 19,
    "model": "api.group_constraint",
    "fields": {
      "name": "flow_out_max",
      "pretty_name": "Flow Out Max",
      "description": "Maximum absolute sum of supplied energy (flow_out) over all timesteps for a set of technologies across a set of locations.",
      "equations": [
        {
          "expression": "sum(flow_out_non_transmission_techs[||techs||||nodes||||carriers||], over=[nodes, techs, timesteps, carriers]) <= $value_1"
        }
      ],
      "slices": {
        "techs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "techs"
        },
        "nodes": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "nodes"
        },
        "carriers": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "carriers"
        }
      },
      "sub_expression": {
        "value_1": {
          "yaml": [
            {
              "expression": "VALUE"
            }
          ],
          "show": true,
          "required": true
        }
      }
    }
  },
  {
    "pk": 20,
    "model": "api.group_constraint",
    "fields": {
      "name": "flow_out_equals",
      "pretty_name": "Flow Out Equals",
      "description": "Exact absolute sum of supplied energy (flow_out) over all timesteps for a set of technologies across a set of locations.",
      "equations": [
        {
          "expression": "sum(flow_out_non_transmission_techs[||techs||||nodes||||carriers||], over=[nodes, techs, timesteps, carriers]) == $value_1"
        }
      ],
      "slices": {
        "techs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "techs"
        },
        "nodes": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "nodes"
        },
        "carriers": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "carriers"
        }
      },
      "sub_expression": {
        "value_1": {
          "yaml": [
            {
              "expression": "VALUE"
            }
          ],
          "show": true,
          "required": true
        }
      }
    }
  },
  {
    "pk": 21,
    "model": "api.group_constraint",
    "fields": {
      "name": "flow_in_min",
      "pretty_name": "Flow In Min",
      "description": "Minimum sum of consumed energy (flow_in) over all timesteps for a set of conversion/demand technologies across a set of locations. Values are negative and are relative to zero, i.e. a minimum value of -1 means that consumed energy must be < -1",
      "equations": [
        {
          "expression": "sum(flow_in[||techs||||nodes||||carriers||], over=[nodes, techs, timesteps, carriers]) >= $value_1"
        }
      ],
      "slices": {
        "techs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "techs"
        },
        "nodes": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "nodes"
        },
        "carriers": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "carriers"
        }
      },
      "sub_expression": {
        "value_1": {
          "yaml": [
            {
              "expression": "VALUE"
            }
          ],
          "show": true,
          "required": true
        }
      }
    }
  },
  {
    "pk": 22,
    "model": "api.group_constraint",
    "fields": {
      "name": "flow_in_max",
      "pretty_name": "Flow In Max",
      "description": "Maximum sum of consumed energy (flow_in) over all timesteps for a set of conversion/demand technologies across a set of locations. Values are negative and are relative to zero, i.e. a maximum value of -1 means that consumed energy must be > -1",
      "equations": [
        {
          "expression": "sum(flow_in[||techs||||nodes||||carriers||], over=[nodes, techs, timesteps, carriers]) <= $value_1"
        }
      ],
      "slices": {
        "techs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "techs"
        },
        "nodes": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "nodes"
        },
        "carriers": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "carriers"
        }
      },
      "sub_expression": {
        "value_1": {
          "yaml": [
            {
              "expression": "VALUE"
            }
          ],
          "show": true,
          "required": true
        }
      }
    }
  },
  {
    "pk": 23,
    "model": "api.group_constraint",
    "fields": {
      "name": "flow_in_equals",
      "pretty_name": "Flow In Equals",
      "description": "Exact sum of consumed energy (flow_in) over all timesteps for a set of conversion/demand technologies across a set of locations. Values are negative.",
      "equations": [
        {
          "expression": "sum(flow_in[||techs||||nodes||||carriers||], over=[nodes, techs, timesteps, carriers]) == $value_1"
        }
      ],
      "slices": {
        "techs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "techs"
        },
        "nodes": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "nodes"
        },
        "carriers": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "carriers"
        }
      },
      "sub_expression": {
        "value_1": {
          "yaml": [
            {
              "expression": "VALUE"
            }
          ],
          "show": true,
          "required": true
        }
      }
    }
  },
  {
    "pk": 24,
    "model": "api.group_constraint",
    "fields": {
      "name": "cost_max",
      "pretty_name": "Cost Max",
      "description": "Maximum total cost from a set of technologies across a set of locations.",
      "equations": [
        {
          "expression": "sum(cost[||techs||||nodes||||costs||], over=[nodes, techs, costs]) <= $value_1"
        }
      ],
      "slices": {
        "techs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "techs"
        },
        "nodes": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "nodes"
        },
        "costs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "costs"
        }
      },
      "sub_expression": {
        "value_1": {
          "yaml": [
            {
              "expression": "VALUE"
            }
          ],
          "show": true,
          "required": true
        }
      }
    }
  },
  {
    "pk": 25,
    "model": "api.group_constraint",
    "fields": {
      "name": "cost_min",
      "pretty_name": "Cost Min",
      "description": "Minimum total cost from a set of technologies across a set of locations.",
      "equations": [
        {
          "expression": "sum(cost[||techs||||nodes||||costs||], over=[nodes, techs, costs]) >= $value_1"
        }
      ],
      "slices": {
        "techs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "techs"
        },
        "nodes": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "nodes"
        },
        "costs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "costs"
        }
      },
      "sub_expression": {
        "value_1": {
          "yaml": [
            {
              "expression": "VALUE"
            }
          ],
          "show": true,
          "required": true
        }
      }
    }
  },
  {
    "pk": 26,
    "model": "api.group_constraint",
    "fields": {
      "name": "cost_equals",
      "pretty_name": "Cost Equals",
      "description": "Total cost from a set of technologies across a set of locations must equal given value.",
      "equations": [
        {
          "expression": "sum(cost[||techs||||nodes||||costs||], over=[nodes, techs, costs]) == $value_1"
        }
      ],
      "slices": {
        "techs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "techs"
        },
        "nodes": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "nodes"
        },
        "costs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "costs"
        }
      },
      "sub_expression": {
        "value_1": {
          "yaml": [
            {
              "expression": "VALUE"
            }
          ],
          "show": true,
          "required": true
        }
      }
    }
  },
  {
    "pk": 27,
    "model": "api.group_constraint",
    "fields": {
      "name": "cost_var_max",
      "pretty_name": "Cost Var Max",
      "description": "Maximum variable cost from a set of technologies across a set of locations.",
      "equations": [
        {
          "expression": "sum(cost_var[||techs||||nodes||||costs||], over=[nodes, techs, timesteps, costs]) <= $value_1"
        }
      ],
      "slices": {
        "techs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "techs"
        },
        "nodes": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "nodes"
        },
        "costs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "costs"
        }
      },
      "sub_expression": {
        "value_1": {
          "yaml": [
            {
              "expression": "VALUE"
            }
          ],
          "show": true,
          "required": true
        }
      }
    }
  },
  {
    "pk": 28,
    "model": "api.group_constraint",
    "fields": {
      "name": "cost_var_min",
      "pretty_name": "Cost Var Min",
      "description": "Minimum variable cost from a set of technologies across a set of locations.",
      "equations": [
        {
          "expression": "sum(cost_var[||techs||||nodes||||costs||], over=[nodes, techs, timesteps, costs]) >= $value_1"
        }
      ],
      "slices": {
        "techs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "techs"
        },
        "nodes": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "nodes"
        },
        "costs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "costs"
        }
      },
      "sub_expression": {
        "value_1": {
          "yaml": [
            {
              "expression": "VALUE"
            }
          ],
          "show": true,
          "required": true
        }
      }
    }
  },
  {
    "pk": 29,
    "model": "api.group_constraint",
    "fields": {
      "name": "cost_var_equals",
      "pretty_name": "Cost Var Equals",
      "description": "Variable cost from a set of technologies across a set of locations must equal given value.",
      "equations": [
        {
          "expression": "sum(cost_var[||techs||||nodes||||costs||], over=[nodes, techs, timesteps, costs]) == $value_1"
        }
      ],
      "slices": {
        "techs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "techs"
        },
        "nodes": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "nodes"
        },
        "costs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "costs"
        }
      },
      "sub_expression": {
        "value_1": {
          "yaml": [
            {
              "expression": "VALUE"
            }
          ],
          "show": true,
          "required": true
        }
      }
    }
  },
  {
    "pk": 30,
    "model": "api.group_constraint",
    "fields": {
      "name": "cost_investment_max",
      "pretty_name": "Cost Investment Max",
      "description": "Maximum investment cost from a set of technologies across a set of locations.",
      "equations": [
        {
          "expression": "sum(cost_investment[||techs||||nodes||||costs||], over=[nodes, techs, costs]) <= $value_1"
        }
      ],
      "slices": {
        "techs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "techs"
        },
        "nodes": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "nodes"
        },
        "costs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "costs"
        }
      },
      "sub_expression": {
        "value_1": {
          "yaml": [
            {
              "expression": "VALUE"
            }
          ],
          "show": true,
          "required": true
        }
      }
    }
  },
  {
    "pk": 31,
    "model": "api.group_constraint",
    "fields": {
      "name": "cost_investment_min",
      "pretty_name": "Cost Investment Min",
      "description": "Minimum investment cost from a set of technologies across a set of locations.",
      "equations": [
        {
          "expression": "sum(cost_investment[||techs||||nodes||||costs||], over=[nodes, techs, costs]) >= $value_1"
        }
      ],
      "slices": {
        "techs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "techs"
        },
        "nodes": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "nodes"
        },
        "costs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "costs"
        }
      },
      "sub_expression": {
        "value_1": {
          "yaml": [
            {
              "expression": "VALUE"
            }
          ],
          "show": true,
          "required": true
        }
      }
    }
  },
  {
    "pk": 32,
    "model": "api.group_constraint",
    "fields": {
      "name": "cost_investment_equals",
      "pretty_name": "Cost Investment Equals",
      "description": "Investment cost from a set of technologies across a set of locations must equal given value.",
      "equations": [
        {
          "expression": "sum(cost_investment[||techs||||nodes||||costs||], over=[nodes, techs, costs]) == $value_1"
        }
      ],
      "slices": {
        "techs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "techs"
        },
        "nodes": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "nodes"
        },
        "costs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "costs"
        }
      },
      "sub_expression": {
        "value_1": {
          "yaml": [
            {
              "expression": "VALUE"
            }
          ],
          "show": true,
          "required": true
        }
      }
    }
  },
  {
    "pk": 33,
    "model": "api.group_constraint",
    "fields": {
      "name": "flow_cap_share_min",
      "pretty_name": "Flow Cap Share Min",
      "description": "Minimum share of installed capacity from a set of technologies across a set of locations.",
      "equations": [
        {
          "expression": "sum(flow_cap[||techs_lhs||||nodes_lhs||||carriers_lhs||], over=[nodes, techs, carriers]) >= $total_flow_cap_share"
        }
      ],
      "slices": {
        "techs_lhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "techs"
        },
        "techs_rhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "techs"
        },
        "nodes_lhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "nodes"
        },
        "nodes_rhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "nodes"
        },
        "carriers_lhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "carriers"
        },
        "carriers_rhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "carriers"
        }
      },
      "sub_expression": {
        "total_flow_out_share": {
          "yaml": [
            {
              "expression": "sum(flow_cap[||techs_rhs||||nodes_rhs||||carriers_rhs||], over=[nodes, techs, carriers]) * $value_1"
            }
          ],
          "show": false
        },
        "value_1": {
          "yaml": [
            {
              "expression": "VALUE"
            }
          ],
          "show": true,
          "required": true
        }
      }
    }
  },
  {
    "pk": 34,
    "model": "api.group_constraint",
    "fields": {
      "name": "flow_cap_share_max",
      "pretty_name": "Flow Cap Share Max",
      "description": "Maximum share of installed capacity from a set of technologies across a set of locations.",
      "equations": [
        {
          "expression": "sum(flow_cap[||techs_lhs||||nodes_lhs||||carriers_lhs||], over=[nodes, techs, carriers]) <= $total_flow_cap_share"
        }
      ],
      "slices": {
        "techs_lhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "techs"
        },
        "techs_rhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "techs"
        },
        "nodes_lhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "nodes"
        },
        "nodes_rhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "nodes"
        },
        "carriers_lhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "carriers"
        },
        "carriers_rhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "carriers"
        }
      },
      "sub_expression": {
        "total_flow_out_share": {
          "yaml": [
            {
              "expression": "sum(flow_cap[||techs_rhs||||nodes_rhs||||carriers_rhs||], over=[nodes, techs, carriers]) * $value_1"
            }
          ],
          "show": false
        },
        "value_1": {
          "yaml": [
            {
              "expression": "VALUE"
            }
          ],
          "show": true,
          "required": true
        }
      }
    }
  },
  {
    "pk": 35,
    "model": "api.group_constraint",
    "fields": {
      "name": "flow_cap_share_equals",
      "pretty_name": "Flow Cap Share Equals",
      "description": "Exact share of installed capacity from a set of technologies across a set of locations.",
      "equations": [
        {
          "expression": "sum(flow_cap[||techs_lhs||||nodes_lhs||||carriers_lhs||], over=[nodes, techs, carriers]) == $total_flow_cap_share"
        }
      ],
      "slices": {
        "techs_lhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "techs"
        },
        "techs_rhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "techs"
        },
        "nodes_lhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "nodes"
        },
        "nodes_rhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "nodes"
        },
        "carriers_lhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "carriers"
        },
        "carriers_rhs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "carriers"
        }
      },
      "sub_expression": {
        "total_flow_out_share": {
          "yaml": [
            {
              "expression": "sum(flow_cap[||techs_rhs||||nodes_rhs||||carriers_rhs||], over=[nodes, techs, carriers]) * $value_1"
            }
          ],
          "show": false
        },
        "value_1": {
          "yaml": [
            {
              "expression": "VALUE"
            }
          ],
          "show": true,
          "required": true
        }
      }
    }
  },
  {
    "pk": 36,
    "model": "api.group_constraint",
    "fields": {
      "name": "flow_cap_min",
      "pretty_name": "Flow Cap Min",
      "description": "Minimum installed capacity from a set of technologies across a set of locations.",
      "equations": [
        {
          "expression": "sum(flow_cap[||techs||||nodes||||carriers||], over=[nodes, techs, carriers]) >= $value_1"
        }
      ],
      "slices": {
        "techs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "techs"
        },
        "nodes": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "nodes"
        },
        "carriers": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "carriers"
        }
      },
      "sub_expression": {
        "value_1": {
          "yaml": [
            {
              "expression": "VALUE"
            }
          ],
          "show": true,
          "required": true
        }
      }
    }
  },
  {
    "pk": 37,
    "model": "api.group_constraint",
    "fields": {
      "name": "flow_cap_max",
      "pretty_name": "Flow Cap Max",
      "description": "Maximum installed capacity from a set of technologies across a set of locations.",
      "equations": [
        {
          "expression": "sum(flow_cap[||techs||||nodes||||carriers||], over=[nodes, techs, carriers]) <= $value_1"
        }
      ],
      "slices": {
        "techs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "techs"
        },
        "nodes": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "nodes"
        },
        "carriers": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "carriers"
        }
      },
      "sub_expression": {
        "value_1": {
          "yaml": [
            {
              "expression": "VALUE"
            }
          ],
          "show": true,
          "required": true
        }
      }
    }
  },
  {
    "pk": 38,
    "model": "api.group_constraint",
    "fields": {
      "name": "flow_cap_equals",
      "pretty_name": "Flow Cap Equals",
      "description": "Exact installed capacity from a set of technologies across a set of locations.",
      "equations": [
        {
          "expression": "sum(flow_cap[||techs||||nodes||||carriers||], over=[nodes, techs, carriers]) == $value_1"
        }
      ],
      "slices": {
        "techs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "techs"
        },
        "nodes": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "nodes"
        },
        "carriers": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "carriers"
        }
      },
      "sub_expression": {
        "value_1": {
          "yaml": [
            {
              "expression": "VALUE"
            }
          ],
          "show": true,
          "required": true
        }
      }
    }
  },
  {
    "pk": 39,
    "model": "api.group_constraint",
    "fields": {
      "name": "area_use_min",
      "pretty_name": "Area Use Min",
      "description": "Minimum resource area used by a set of technologies across a set of locations.",
      "equations": [
        {
          "expression": "sum(area_use[||techs||||nodes||], over=[nodes, techs]) >= $value_1"
        }
      ],
      "slices": {
        "techs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "techs"
        },
        "nodes": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "nodes"
        }
      },
      "sub_expression": {
        "value_1": {
          "yaml": [
            {
              "expression": "VALUE"
            }
          ],
          "show": true,
          "required": true
        }
      }
    }
  },
  {
    "pk": 40,
    "model": "api.group_constraint",
    "fields": {
      "name": "area_use_max",
      "pretty_name": "Area Use Max",
      "description": "Maximum resource area used by a set of technologies across a set of locations.",
      "equations": [
        {
          "expression": "sum(area_use[||techs||||nodes||], over=[nodes, techs]) <= $value_1"
        }
      ],
      "slices": {
        "techs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "techs"
        },
        "nodes": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "nodes"
        }
      },
      "sub_expression": {
        "value_1": {
          "yaml": [
            {
              "expression": "VALUE"
            }
          ],
          "show": true,
          "required": true
        }
      }
    }
  },
  {
    "pk": 41,
    "model": "api.group_constraint",
    "fields": {
      "name": "area_use_equals",
      "pretty_name": "Area Use Equals",
      "description": "Exact resource area used by a set of technologies across a set of locations.",
      "equations": [
        {
          "expression": "sum(area_use[||techs||||nodes||], over=[nodes, techs]) == $value_1"
        }
      ],
      "slices": {
        "techs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "techs"
        },
        "nodes": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "nodes"
        }
      },
      "sub_expression": {
        "value_1": {
          "yaml": [
            {
              "expression": "VALUE"
            }
          ],
          "show": true,
          "required": true
        }
      }
    }
  },
  {
    "pk": 42,
    "model": "api.group_constraint",
    "fields": {
      "name": "storage_cap_min",
      "pretty_name": "Storage Cap Min",
      "description": "Minimum installed storage capacity from a set of technologies across a set of locations.",
      "equations": [
        {
          "expression": "sum(storage_cap[||techs||||nodes||], over=[nodes, techs]) >= $value_1"
        }
      ],
      "slices": {
        "techs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "techs"
        },
        "nodes": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "nodes"
        }
      },
      "sub_expression": {
        "value_1": {
          "yaml": [
            {
              "expression": "VALUE"
            }
          ],
          "show": true,
          "required": true
        }
      }
    }
  },
  {
    "pk": 43,
    "model": "api.group_constraint",
    "fields": {
      "name": "storage_cap_max",
      "pretty_name": "Storage Cap Max",
      "description": "Maximum installed storage capacity from a set of technologies across a set of locations.",
      "equations": [
        {
          "expression": "sum(storage_cap[||techs||||nodes||], over=[nodes, techs]) <= $value_1"
        }
      ],
      "slices": {
        "techs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "techs"
        },
        "nodes": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "nodes"
        }
      },
      "sub_expression": {
        "value_1": {
          "yaml": [
            {
              "expression": "VALUE"
            }
          ],
          "show": true,
          "required": true
        }
      }
    }
  },
  {
    "pk": 44,
    "model": "api.group_constraint",
    "fields": {
      "name": "storage_cap_equals",
      "pretty_name": "Storage Cap Equals",
      "description": "Exact installed storage capacity from a set of technologies across a set of locations.",
      "equations": [
        {
          "expression": "sum(storage_cap[||techs||||nodes||], over=[nodes, techs]) == $value_1"
        }
      ],
      "slices": {
        "techs": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "techs"
        },
        "nodes": {
          "yaml": [
            {
              "expression": "[VALUE]"
            }
          ],
          "dim": "nodes"
        }
      },
      "sub_expression": {
        "value_1": {
          "yaml": [
            {
              "expression": "VALUE"
            }
          ],
          "show": true,
          "required": true
        }
      }
    }
  }
]