[
  {
    "pk": 1,
    "model": "api.parameter",
    "fields": {
      "root": "essentials",
      "category": "Essentials",
      "name": "parent",
      "pretty_name": "Parent Technology",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "",
      "description": "Name of the base technology group (supply, supply_plus, demand, storage, transmission, conversion, conversion_plus)",
      "is_essential": true,
      "is_carrier": false,
      "choices": "[\"supply\",\"supply_plus\",\"demand\",\"storage\",\"transmission\",\"conversion\",\"conversion_plus\"]"
    }
  },
  {
    "pk": 2,
    "model": "api.parameter",
    "fields": {
      "root": "essentials",
      "category": "Essentials",
      "name": "name",
      "pretty_name": "Name",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "",
      "description": "Name of the technology",
      "is_essential": true,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 3,
    "model": "api.parameter",
    "fields": {
      "root": "essentials",
      "category": "Essentials",
      "name": "color",
      "pretty_name": "Color",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "hex color code",
      "description": "Representative color for visualizations",
      "is_essential": true,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 4,
    "model": "api.parameter",
    "fields": {
      "root": "essentials",
      "category": "Essentials",
      "name": "carrier",
      "pretty_name": "Energy carrier",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "",
      "description": "[Required] Energy carrier (electricity, heat, gas, etc.)",
      "is_essential": true,
      "is_carrier": true,
      "choices": "[]"
    }
  },
  {
    "pk": 5,
    "model": "api.parameter",
    "fields": {
      "root": "essentials",
      "category": "Essentials",
      "name": "carrier_in",
      "pretty_name": "Input Carrier",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "",
      "description": "[Required] Input energy carrier (electricity, heat, gas, etc.)",
      "is_essential": true,
      "is_carrier": true,
      "choices": "[]"
    }
  },
  {
    "pk": 6,
    "model": "api.parameter",
    "fields": {
      "root": "essentials",
      "category": "Essentials",
      "name": "carrier_out",
      "pretty_name": "Output Carrier",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "",
      "description": "[Required] Output energy carrier (electricity, heat, gas, etc.)",
      "is_essential": true,
      "is_carrier": true,
      "choices": "[]"
    }
  },
  {
    "pk": 7,
    "model": "api.parameter",
    "fields": {
      "root": "constraints",
      "category": "Constraints: Technology",
      "name": "carrier_ratios",
      "pretty_name": "Carrier ratios",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "<sub>ABC</sub>",
      "description": "[Optional] Ratio of summed output of carriers in [\u2018out_2\u2019, \u2018out_3\u2019] / [\u2018in_2\u2019, \u2018in_3\u2019] to the summed output of carriers in \u2018out\u2019 / \u2018in\u2019. given in a nested dictionary.",
      "is_essential": true,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 8,
    "model": "api.parameter",
    "fields": {
      "root": "constraints",
      "category": "Constraints: Storage",
      "name": "energy_cap_per_storage_cap_max",
      "pretty_name": "Maximum energy capacity per storage capacity",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "%/hour",
      "description": "ratio of maximum charge/discharge (kW) for a given storage capacity (kWh).",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 9,
    "model": "api.parameter",
    "fields": {
      "root": "constraints",
      "category": "Constraints: Technology",
      "name": "energy_cap_equals",
      "pretty_name": "Installed energy capacity",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "kW",
      "description": "fixes maximum/minimum if decision variables carrier_prod/carrier_con and overrides _max/ _min constraints.",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 10,
    "model": "api.parameter",
    "fields": {
      "root": "constraints",
      "category": "Constraints: Technology",
      "name": "energy_cap_equals_systemwide",
      "pretty_name": "Installed energy capacity (System-wide)",
      "timeseries_enabled": "False",
      "is_systemwide": true,
      "units": "kW",
      "description": "fixes the sum to a maximum/minimum, for a particular technology, of the decision variables carrier_prod/carrier_conover all locations.",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 11,
    "model": "api.parameter",
    "fields": {
      "root": "constraints",
      "category": "Constraints: Technology",
      "name": "energy_cap_max",
      "pretty_name": "Maximum installed energy capacity",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "kW",
      "description": "Limits decision variables carrier_prod/carrier_con to a maximum/minimum.",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 12,
    "model": "api.parameter",
    "fields": {
      "root": "constraints",
      "category": "Constraints: Technology",
      "name": "energy_cap_max_systemwide",
      "pretty_name": "Maximum installed energy capacity (System-wide)",
      "timeseries_enabled": "False",
      "is_systemwide": true,
      "units": "kW",
      "description": "Limits the sum to a maximum/minimum, for a particular technology, of the decision variables carrier_prod/carrier_conover all locations.",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 13,
    "model": "api.parameter",
    "fields": {
      "root": "constraints",
      "category": "Constraints: Technology",
      "name": "energy_cap_min",
      "pretty_name": "Minimum installed energy capacity",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "kW",
      "description": "Limits decision variables carrier_prod/carrier_con to a minimum/maximum.",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 14,
    "model": "api.parameter",
    "fields": {
      "root": "constraints",
      "category": "Constraints: Technology",
      "name": "energy_cap_min_use",
      "pretty_name": "Minimum operating use of capacity",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "%",
      "description": "Set to a value between 0 and 1 to force minimum carrer production as a fraction of the technology maximum energy capacity. If non-zero and technology is not defined by units, this will force the technology to operate above its minimum value at every timestep.",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 15,
    "model": "api.parameter",
    "fields": {
      "root": "constraints",
      "category": "Constraints: Technology",
      "name": "energy_cap_per_unit",
      "pretty_name": "Energy capacity per purchased unit",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "kW/unit",
      "description": "Set the capacity of each integer unit of a technology purchased",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 16,
    "model": "api.parameter",
    "fields": {
      "root": "constraints",
      "category": "Constraints: Technology",
      "name": "energy_cap_scale",
      "pretty_name": "Energy capacity scale factor",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "&#8593;",
      "description": "Scale all energy_capmin/max/equals/total_max/total_equals constraints by this value",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 17,
    "model": "api.parameter",
    "fields": {
      "root": "constraints",
      "category": "Constraints: Technology",
      "name": "energy_con",
      "pretty_name": "Allow energy consumption",
      "timeseries_enabled": "True",
      "is_systemwide": false,
      "units": "<sup>T</sup>/<sub>F</sub>",
      "description": "Allow this technology to consume energy from the carrier (static boolean, or from file as timeseries).",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[\"True\",\"False\"]"
    }
  },
  {
    "pk": 18,
    "model": "api.parameter",
    "fields": {
      "root": "constraints",
      "category": "Constraints: Technology",
      "name": "energy_eff",
      "pretty_name": "Energy efficiency",
      "timeseries_enabled": "True",
      "is_systemwide": false,
      "units": "%",
      "description": "conversion efficiency (static, or from file as timeseries), from resource/storage/carrier_in (tech dependent) to carrier_out.",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 19,
    "model": "api.parameter",
    "fields": {
      "root": "constraints",
      "category": "Constraints: Technology",
      "name": "energy_eff_per_distance",
      "pretty_name": "Energy efficiency per distance",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "%/km",
      "description": "Set as value between 1 (no loss) and 0 (all energy lost).",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 20,
    "model": "api.parameter",
    "fields": {
      "root": "constraints",
      "category": "Constraints: Technology",
      "name": "energy_prod",
      "pretty_name": "Allow energy production",
      "timeseries_enabled": "True",
      "is_systemwide": false,
      "units": "<sup>T</sup>/<sub>F</sub>",
      "description": "Allow this technology to supply energy to the carrier (static boolean, or from file as timeseries).",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[\"True\",\"False\"]"
    }
  },
  {
    "pk": 21,
    "model": "api.parameter",
    "fields": {
      "root": "constraints",
      "category": "Constraints: Technology",
      "name": "energy_ramping",
      "pretty_name": "Ramping rate",
      "timeseries_enabled": "True",
      "is_systemwide": false,
      "units": "%/hour",
      "description": "Set to False to disable ramping constraints, otherwise limit maximum carrier production to a fraction of maximum capacity, which increases by that fraction at each timestep.",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 22,
    "model": "api.parameter",
    "fields": {
      "root": "constraints",
      "category": "Constraints: Technology",
      "name": "export_cap",
      "pretty_name": "Export capacity",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "kW",
      "description": "Maximum allowed export of produced energy carrier for a technology.",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 23,
    "model": "api.parameter",
    "fields": {
      "root": "constraints",
      "category": "Constraints: Technology",
      "name": "export_carrier",
      "pretty_name": "Export carrier",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "<sub>ABC</sub>",
      "description": "Name of carrier to be exported. Must be an output carrier of the technology",
      "is_essential": false,
      "is_carrier": true,
      "choices": "[]"
    }
  },
  {
    "pk": 24,
    "model": "api.parameter",
    "fields": {
      "root": "constraints",
      "category": "Constraints: Resource",
      "name": "force_resource",
      "pretty_name": "Force all resource",
      "timeseries_enabled": "True",
      "is_systemwide": false,
      "units": "<sup>T</sup>/<sub>F</sub>",
      "description": "Forces this technology to use all available resource, rather than making it a maximum upper boundary (for production) or minimum lower boundary (for consumption). Static boolean, or from file as timeseries",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[\"True\",\"False\"]"
    }
  },
  {
    "pk": 25,
    "model": "api.parameter",
    "fields": {
      "root": "constraints",
      "category": "Constraints: Technology",
      "name": "lifetime",
      "pretty_name": "Technology lifetime",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "years",
      "description": "Must be defined if fixed capital costs are defined. A reasonable value for many technologies is around 20-25 years.",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 26,
    "model": "api.parameter",
    "fields": {
      "root": "constraints",
      "category": "Constraints: Technology",
      "name": "one_way",
      "pretty_name": "One way transmission",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "<sup>T</sup>/<sub>F</sub>",
      "description": "Transmission may only go from Location 1 to Location 2",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[\"True\",\"False\"]"
    }
  },
  {
    "pk": 27,
    "model": "api.parameter",
    "fields": {
      "root": "constraints",
      "category": "Constraints: Technology",
      "name": "parasitic_eff",
      "pretty_name": "Plant parasitic efficiency",
      "timeseries_enabled": "True",
      "is_systemwide": false,
      "units": "%",
      "description": "Additional losses as energy gets transferred from the plant to the carrier (static, or from file as timeseries), e.g. due to plant parasitic consumption",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 28,
    "model": "api.parameter",
    "fields": {
      "root": "constraints",
      "category": "Constraints: Resource",
      "name": "resource",
      "pretty_name": "Available resource: supply(+) or demand(-)",
      "timeseries_enabled": "True",
      "is_systemwide": false,
      "units": "kWh",
      "description": "Maximum available resource (static, or from file as timeseries). Unit dictated by resource_unit. Demand data must be negative.",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 29,
    "model": "api.parameter",
    "fields": {
      "root": "constraints",
      "category": "Constraints: Resource",
      "name": "resource_area_equals",
      "pretty_name": "Installed area",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "m<sup>2</sup>",
      "description": "",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 30,
    "model": "api.parameter",
    "fields": {
      "root": "constraints",
      "category": "Constraints: Resource",
      "name": "resource_area_max",
      "pretty_name": "Maximum installed area",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "m<sup>2</sup>",
      "description": "Set to False by default in order to disable this constraint",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 31,
    "model": "api.parameter",
    "fields": {
      "root": "constraints",
      "category": "Constraints: Resource",
      "name": "resource_area_min",
      "pretty_name": "Minimum installed area",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "m<sup>2</sup>",
      "description": "",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 32,
    "model": "api.parameter",
    "fields": {
      "root": "constraints",
      "category": "Constraints: Resource",
      "name": "resource_area_per_energy_cap",
      "pretty_name": "Ratio of resource area to energy capacity",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "m<sup>2</sup>/kW",
      "description": "If set, forces resource_area to follow energy_cap with the given numerical ratio (e.g. setting to 1.5 means that resource_area == 1.5 *energy_cap)",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 33,
    "model": "api.parameter",
    "fields": {
      "root": "constraints",
      "category": "Constraints: Resource",
      "name": "resource_cap_equals",
      "pretty_name": "Installed resource consumption capacity",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "kW",
      "description": "overrides _max and _min constraints.",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 34,
    "model": "api.parameter",
    "fields": {
      "root": "constraints",
      "category": "Constraints: Resource",
      "name": "resource_cap_equals_energy_cap",
      "pretty_name": "Resource capacity equals energy capacity",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "<sup>T</sup>/<sub>F</sub>",
      "description": "If True, resource_cap is forced to equal energy_cap",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[\"True\",\"False\"]"
    }
  },
  {
    "pk": 35,
    "model": "api.parameter",
    "fields": {
      "root": "constraints",
      "category": "Constraints: Resource",
      "name": "resource_cap_max",
      "pretty_name": "Maximum installed resource consumption capacity",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "kW",
      "description": "",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 36,
    "model": "api.parameter",
    "fields": {
      "root": "constraints",
      "category": "Constraints: Resource",
      "name": "resource_cap_min",
      "pretty_name": "Minimum installed resource consumption capacity",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "kW",
      "description": "",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 37,
    "model": "api.parameter",
    "fields": {
      "root": "constraints",
      "category": "Constraints: Resource",
      "name": "resource_eff",
      "pretty_name": "Resource efficiency",
      "timeseries_enabled": "True",
      "is_systemwide": false,
      "units": "%",
      "description": "Efficiency (static, or from file as timeseries) in capturing resource before it reaches storage (if storage is present) or conversion to carrier.",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 38,
    "model": "api.parameter",
    "fields": {
      "root": "constraints",
      "category": "Constraints: Resource",
      "name": "resource_min_use",
      "pretty_name": "Minimum resource consumption",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "%",
      "description": "Set to a value between 0 and 1 to force minimum resource consumption for production technologies",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 39,
    "model": "api.parameter",
    "fields": {
      "root": "constraints",
      "category": "Constraints: Resource",
      "name": "resource_scale",
      "pretty_name": "Resource scale factor",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "&#8593;",
      "description": "Scale resource (either static value or all values in timeseries) by this value",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 40,
    "model": "api.parameter",
    "fields": {
      "root": "constraints",
      "category": "Constraints: Resource",
      "name": "resource_unit",
      "pretty_name": "Resource unit",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "<sub>ABC</sub>",
      "description": "Sets the unit of resource to either energy (i.e. kWh), energy_per_area(i.e. kWh/m2), or energy_per_cap (i.e. kWh/kW). energy_per_area uses the resource_area decision variable to scale the available resource while energy_per_cap uses the energy_capdecision variable.",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[\"energy\",\"energy_per_area\",\"energy_per_cap\"]"
    }
  },
  {
    "pk": 41,
    "model": "api.parameter",
    "fields": {
      "root": "constraints",
      "category": "Constraints: Storage",
      "name": "storage_cap_equals",
      "pretty_name": "Storage capacity",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "kWh",
      "description": "If not defined, energy_cap_equals * energy_cap_per_storage_cap will be used as the capacity and will override max and min constraints.",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 42,
    "model": "api.parameter",
    "fields": {
      "root": "constraints",
      "category": "Constraints: Storage",
      "name": "storage_cap_max",
      "pretty_name": "Maximum storage capacity",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "kWh",
      "description": "If not defined, energy_cap_max * energy_cap_per_storage_cap_max will be used as the capacity.",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 43,
    "model": "api.parameter",
    "fields": {
      "root": "constraints",
      "category": "Constraints: Storage",
      "name": "storage_cap_min",
      "pretty_name": "Minimum storage capacity",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "kWh",
      "description": "",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 44,
    "model": "api.parameter",
    "fields": {
      "root": "constraints",
      "category": "Constraints: Storage",
      "name": "storage_cap_per_unit",
      "pretty_name": "Storage capacity per purchased unit",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "kWh/unit",
      "description": "Set the storage capacity of each integer unit of a technology purchased.",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 45,
    "model": "api.parameter",
    "fields": {
      "root": "constraints",
      "category": "Constraints: Storage",
      "name": "storage_initial",
      "pretty_name": "Initial storage level",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "%",
      "description": "Set stored energy in device at the first timestep, as a fraction of total storage capacity",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 46,
    "model": "api.parameter",
    "fields": {
      "root": "constraints",
      "category": "Constraints: Storage",
      "name": "storage_loss",
      "pretty_name": "Storage loss rate",
      "timeseries_enabled": "True",
      "is_systemwide": false,
      "units": "%/hour",
      "description": "rate of storage loss per hour (static, or from file as timeseries), used to calculate lost stored energy as (1 -storage_loss)^hours_per_timestep",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 47,
    "model": "api.parameter",
    "fields": {
      "root": "constraints",
      "category": "Constraints: Storage",
      "name": "storage_time_max",
      "pretty_name": "Maximum storage time",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "hour",
      "description": "Maximum storage time",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 48,
    "model": "api.parameter",
    "fields": {
      "root": "constraints",
      "category": "Constraints: Technology",
      "name": "units_equals",
      "pretty_name": "Number of purchased units",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "units",
      "description": "Turns the model from LP to MILP.",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 49,
    "model": "api.parameter",
    "fields": {
      "root": "constraints",
      "category": "Constraints: Technology",
      "name": "units_equals_systemwide",
      "pretty_name": "Number of purchased units (System-wide)",
      "timeseries_enabled": "False",
      "is_systemwide": true,
      "units": "units",
      "description": "fixes the sum to a specific value, for a particular technology, of the decision variables carrier_prod/carrier_conover all locations.",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 50,
    "model": "api.parameter",
    "fields": {
      "root": "constraints",
      "category": "Constraints: Technology",
      "name": "units_max",
      "pretty_name": "Maximum number of purchased units",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "units",
      "description": "Turns the model from LP to MILP.",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 51,
    "model": "api.parameter",
    "fields": {
      "root": "constraints",
      "category": "Constraints: Technology",
      "name": "units_max_systemwide",
      "pretty_name": "Maximum number of purchased units (System-wide)",
      "timeseries_enabled": "False",
      "is_systemwide": true,
      "units": "units",
      "description": "Limits the sum to a maximum/minimum, for a particular technology, of the decision variables carrier_prod/carrier_conover all locations.",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 52,
    "model": "api.parameter",
    "fields": {
      "root": "constraints",
      "category": "Constraints: Technology",
      "name": "units_min",
      "pretty_name": "Minimum number of purchased units",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "units",
      "description": "Turns the model from LP to MILP.",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 53,
    "model": "api.parameter",
    "fields": {
      "root": "costs.monetary",
      "category": "Costs: Monetary",
      "name": "energy_cap",
      "pretty_name": "Cost of energy capacity",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "$/kW",
      "description": "",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 54,
    "model": "api.parameter",
    "fields": {
      "root": "costs.monetary",
      "category": "Costs: Monetary",
      "name": "energy_cap_per_distance",
      "pretty_name": "Cost of energy capacity, per unit distance",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "$/kW/km",
      "description": "Applied to transmission links only",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 55,
    "model": "api.parameter",
    "fields": {
      "root": "costs.monetary",
      "category": "Costs: Monetary",
      "name": "export",
      "pretty_name": "Carrier export cost",
      "timeseries_enabled": "True",
      "is_systemwide": false,
      "units": "$/kWh",
      "description": "Usually used in the negative sense, as a subsidy.",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 56,
    "model": "api.parameter",
    "fields": {
      "root": "costs.monetary",
      "category": "Costs: Monetary",
      "name": "depreciation_rate",
      "pretty_name": "Depreciation rate",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "$/year",
      "description": "",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 57,
    "model": "api.parameter",
    "fields": {
      "root": "costs.monetary",
      "category": "Costs: Monetary",
      "name": "interest_rate",
      "pretty_name": "Interest rate",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "%",
      "description": "Used when computing levelized costs",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 58,
    "model": "api.parameter",
    "fields": {
      "root": "costs.monetary",
      "category": "Costs: Monetary",
      "name": "om_annual",
      "pretty_name": "Yearly O&M costs",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "$/kW",
      "description": "",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 59,
    "model": "api.parameter",
    "fields": {
      "root": "costs.monetary",
      "category": "Costs: Monetary",
      "name": "om_annual_investment_fraction",
      "pretty_name": "Fractional yearly O&M costs (of total investment)",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "%",
      "description": "",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 60,
    "model": "api.parameter",
    "fields": {
      "root": "costs.monetary",
      "category": "Costs: Monetary",
      "name": "om_con",
      "pretty_name": "Carrier consumption cost",
      "timeseries_enabled": "True",
      "is_systemwide": false,
      "units": "$/kWh",
      "description": "Applied to carrier consumption of a technology",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 61,
    "model": "api.parameter",
    "fields": {
      "root": "costs.monetary",
      "category": "Costs: Monetary",
      "name": "om_prod",
      "pretty_name": "Carrier production cost",
      "timeseries_enabled": "True",
      "is_systemwide": false,
      "units": "$/kWh",
      "description": "Applied to carrier production of a technology",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 62,
    "model": "api.parameter",
    "fields": {
      "root": "costs.monetary",
      "category": "Costs: Monetary",
      "name": "purchase",
      "pretty_name": "Purchase cost",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "$/unit",
      "description": "Triggers a binary variable for that technology to say that it has been purchased or is applied to integer variable units",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 63,
    "model": "api.parameter",
    "fields": {
      "root": "costs.monetary",
      "category": "Costs: Monetary",
      "name": "resource_area",
      "pretty_name": "Cost of resource area",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "$/m<sup>2</sup>",
      "description": "",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 64,
    "model": "api.parameter",
    "fields": {
      "root": "costs.monetary",
      "category": "Costs: Monetary",
      "name": "resource_cap",
      "pretty_name": "Cost of resource consumption capacity",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "$/kW",
      "description": "",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 65,
    "model": "api.parameter",
    "fields": {
      "root": "costs.monetary",
      "category": "Costs: Monetary",
      "name": "storage_cap",
      "pretty_name": "Cost of storage capacity",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "$/kWh",
      "description": "",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 66,
    "model": "api.parameter",
    "fields": {
      "root": "essentials",
      "category": "Essentials",
      "name": "carrier_in_2",
      "pretty_name": "Input Carrier 2",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "",
      "description": "[Optional] Second input energy carrier (electricity, heat, gas, etc.)",
      "is_essential": true,
      "is_carrier": true,
      "choices": "[]"
    }
  },
  {
    "pk": 67,
    "model": "api.parameter",
    "fields": {
      "root": "essentials",
      "category": "Essentials",
      "name": "carrier_out_2",
      "pretty_name": "Output Carrier 2",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "",
      "description": "[Optional] Second output energy carrier (electricity, heat, gas, etc.)",
      "is_essential": true,
      "is_carrier": true,
      "choices": "[]"
    }
  },
  {
    "pk": 68,
    "model": "api.parameter",
    "fields": {
      "root": "essentials",
      "category": "Essentials",
      "name": "carrier_in_3",
      "pretty_name": "Input Carrier 3",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "",
      "description": "[Optional] Third input energy carrier (electricity, heat, gas, etc.)",
      "is_essential": true,
      "is_carrier": true,
      "choices": "[]"
    }
  },
  {
    "pk": 69,
    "model": "api.parameter",
    "fields": {
      "root": "essentials",
      "category": "Essentials",
      "name": "carrier_out_3",
      "pretty_name": "Output Carrier 3",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "",
      "description": "[Optional] Third output energy carrier (electricity, heat, gas, etc.)",
      "is_essential": true,
      "is_carrier": true,
      "choices": "[]"
    }
  },
  {
    "pk": 70,
    "model": "api.parameter",
    "fields": {
      "root": "essentials",
      "category": "Costs: Monetary",
      "name": "primary_carrier_in",
      "pretty_name": "Primary Input Carrier",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "",
      "description": "Primary input energy carrier (electricity, heat, gas, etc.)",
      "is_essential": false,
      "is_carrier": true,
      "choices": "[]"
    }
  },
  {
    "pk": 71,
    "model": "api.parameter",
    "fields": {
      "root": "essentials",
      "category": "Costs: Monetary",
      "name": "primary_carrier_out",
      "pretty_name": "Primary Output Carrier",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "",
      "description": "Primary output energy carrier (electricity, heat, gas, etc.)",
      "is_essential": false,
      "is_carrier": true,
      "choices": "[]"
    }
  },
  {
    "pk": 72,
    "model": "api.parameter",
    "fields": {
      "root": "",
      "category": "Constraints: Technology",
      "name": "distance",
      "pretty_name": "Distance",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "km",
      "description": "Exact distance of transmission line from Location 1 to Location 2",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 73,
    "model": "api.parameter",
    "fields": {
      "root": "constraints",
      "category": "Constraints: Storage",
      "name": "storage_discharge_depth",
      "pretty_name": "Storage depth of discharge",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "%",
      "description": "Defines the minimum level of storage state of charge, as a fraction of total storage capacity",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 74,
    "model": "api.parameter",
    "fields": {
      "root": "constraints",
      "category": "Constraints: Technology",
      "name": "force_asynchronous_prod_con",
      "pretty_name": "Force asynchronous energy production & consumption",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "<sup>T</sup>/<sub>F</sub>",
      "description": "fix a storage or transmission technology to only be able to produce or consume energy in a given timestep. This ensures that unphysical dissipation of energy cannot occur in these technologies",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[\"True\",\"False\"]"
    }
  },
  {
    "pk": 75,
    "model": "api.parameter",
    "fields": {
      "root": "constraints",
      "category": "Constraints: Storage",
      "name": "energy_cap_per_storage_cap_min",
      "pretty_name": "Minimum energy capacity per storage capacity",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "%/hour",
      "description": "ratio of maximum charge/discharge (kW) for a given storage capacity (kWh).",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 76,
    "model": "api.parameter",
    "fields": {
      "root": "constraints",
      "category": "Constraints: Storage",
      "name": "energy_cap_per_storage_cap_equals",
      "pretty_name": "Fixed energy capacity per storage capacity",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "%/hour",
      "description": "ratio of charge/discharge (kW) for a given storage capacity (kWh).",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 77,
    "model": "api.parameter",
    "fields": {
      "root": "costs.co2",
      "category": "Emissions: CO2",
      "name": "energy_cap",
      "pretty_name": "Embodied qty. per unit production capacity",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "kg/kW",
      "description": "Embodied or one-time emissions per unit production capacity. May be useful for, e.g, embodied emissions in the technology.",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 78,
    "model": "api.parameter",
    "fields": {
      "root": "costs.co2",
      "category": "Emissions: CO2",
      "name": "energy_cap_per_distance",
      "pretty_name": "Embodied qty. per distance",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "kg/kW/km",
      "description": "Embodied or one-time emissions per unit length/distance of transmission technology",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 79,
    "model": "api.parameter",
    "fields": {
      "root": "costs.co2",
      "category": "Emissions: CO2",
      "name": "export",
      "pretty_name": "Post-process qty. per unit export",
      "timeseries_enabled": "True",
      "is_systemwide": false,
      "units": "kg/kWh",
      "description": "Emissions per unit energy content of, in particular, carrier exported. Note that carrier exported is always taken from carrier produced, so emissions associated with carrier produced are best associated with 'om_prod' and this should only be set if there are additional emissions associated with export.",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 80,
    "model": "api.parameter",
    "fields": {
      "root": "costs.co2",
      "category": "Emissions: CO2",
      "name": "depreciation_rate",
      "pretty_name": "Depreciation Rate",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "",
      "description": "",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 81,
    "model": "api.parameter",
    "fields": {
      "root": "costs.co2",
      "category": "Emissions: CO2",
      "name": "interest_rate",
      "pretty_name": "Interest Rate",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "",
      "description": "",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 82,
    "model": "api.parameter",
    "fields": {
      "root": "costs.co2",
      "category": "Emissions: CO2",
      "name": "om_annual",
      "pretty_name": "Annual qty. per unit capacity",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "kg/kW/year",
      "description": "Fixed annual emissions per unit production capacity. Can be used, e.g., for fixed annual emissions associated with production capacity of the technology, or, e.g., if the technology uses resource area propoortional to capacity, annual emissions in proportion to resource area used.",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 83,
    "model": "api.parameter",
    "fields": {
      "root": "costs.co2",
      "category": "Emissions: CO2",
      "name": "om_annual_investment_fraction",
      "pretty_name": "Annual qty. as fraction of embodied",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "%/year",
      "description": "Annual emissions as a fraction of embodied or one-time emissions associated wtih implementation of the technology.",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 84,
    "model": "api.parameter",
    "fields": {
      "root": "costs.co2",
      "category": "Emissions: CO2",
      "name": "om_con",
      "pretty_name": "Pre-process qty. per unit consumption",
      "timeseries_enabled": "True",
      "is_systemwide": false,
      "units": "kg/kWh",
      "description": "Emissions per unit energy content of resource or consumption consumed. May be useful for pre-conversion, e.g., pre-combustion emissions associated with fuel.",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 85,
    "model": "api.parameter",
    "fields": {
      "root": "costs.co2",
      "category": "Emissions: CO2",
      "name": "om_prod",
      "pretty_name": "Post-process qty. per unit production",
      "timeseries_enabled": "True",
      "is_systemwide": false,
      "units": "kg/kWh",
      "description": "Emissions per unit energy content of carrier produced.",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 86,
    "model": "api.parameter",
    "fields": {
      "root": "costs.co2",
      "category": "Emissions: CO2",
      "name": "purchase",
      "pretty_name": "Embodied qty. per technology unit",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "kg",
      "description": "If unit technology (integer technology representation) is being utilized, quantity of embodied emissions associated with one unit of the technology.",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 87,
    "model": "api.parameter",
    "fields": {
      "root": "costs.co2",
      "category": "Emissions: CO2",
      "name": "resource_area",
      "pretty_name": "Area qty.",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "kg/m2",
      "description": "Embodied or one-time emissions per unit resource area utilized. May be useful for representing one-time emissions associated with, e.g., site preparation for the technology to be built.",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 88,
    "model": "api.parameter",
    "fields": {
      "root": "costs.co2",
      "category": "Emissions: CO2",
      "name": "resource_cap",
      "pretty_name": "Embodied qty. per unit resource consumption capacity",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "kg/kW",
      "description": "Embodied or one-time emissions per unit resource consumption capacity. May be useful for, e.g, embodied emissions in the technology.",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 89,
    "model": "api.parameter",
    "fields": {
      "root": "costs.co2",
      "category": "Emissions: CO2",
      "name": "storage_cap",
      "pretty_name": "Embodied qty. per unit storage capacity",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "kg/kWh",
      "description": "Embodied or one-time emissions per unit storage capacity. May be useful for, e.g, embodied emissions in the technology.",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 90,
    "model": "api.parameter",
    "fields": {
      "root": "costs.ch4",
      "category": "Emissions: CH4",
      "name": "energy_cap",
      "pretty_name": "Embodied qty. per unit production capacity",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "kg/kW",
      "description": "Embodied or one-time emissions per unit production capacity. May be useful for, e.g, embodied emissions in the technology.",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 91,
    "model": "api.parameter",
    "fields": {
      "root": "costs.ch4",
      "category": "Emissions: CH4",
      "name": "energy_cap_per_distance",
      "pretty_name": "Embodied qty. per distance",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "kg/kW/km",
      "description": "Embodied or one-time emissions per unit length/distance of transmission technology",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 92,
    "model": "api.parameter",
    "fields": {
      "root": "costs.ch4",
      "category": "Emissions: CH4",
      "name": "export",
      "pretty_name": "Post-process qty. per unit export",
      "timeseries_enabled": "True",
      "is_systemwide": false,
      "units": "kg/kWh",
      "description": "Emissions per unit energy content of, in particular, carrier exported. Note that carrier exported is always taken from carrier produced, so emissions associated with carrier produced are best associated with 'om_prod' and this should only be set if there are additional emissions associated with export.",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 93,
    "model": "api.parameter",
    "fields": {
      "root": "costs.ch4",
      "category": "Emissions: CH4",
      "name": "depreciation_rate",
      "pretty_name": "Depreciation Rate",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "",
      "description": "",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 94,
    "model": "api.parameter",
    "fields": {
      "root": "costs.ch4",
      "category": "Emissions: CH4",
      "name": "interest_rate",
      "pretty_name": "Interest Rate",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "",
      "description": "",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 95,
    "model": "api.parameter",
    "fields": {
      "root": "costs.ch4",
      "category": "Emissions: CH4",
      "name": "om_annual",
      "pretty_name": "Annual qty. per unit capacity",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "kg/kW/year",
      "description": "Fixed annual emissions per unit production capacity. Can be used, e.g., for fixed annual emissions associated with production capacity of the technology, or, e.g., if the technology uses resource area propoortional to capacity, annual emissions in proportion to resource area used.",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 96,
    "model": "api.parameter",
    "fields": {
      "root": "costs.ch4",
      "category": "Emissions: CH4",
      "name": "om_annual_investment_fraction",
      "pretty_name": "Annual qty. as fraction of embodied",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "%/year",
      "description": "Annual emissions as a fraction of embodied or one-time emissions associated wtih implementation of the technology.",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 97,
    "model": "api.parameter",
    "fields": {
      "root": "costs.ch4",
      "category": "Emissions: CH4",
      "name": "om_con",
      "pretty_name": "Pre-process qty. per unit consumption",
      "timeseries_enabled": "True",
      "is_systemwide": false,
      "units": "kg/kWh",
      "description": "Emissions per unit energy content of resource or consumption consumed. May be useful for pre-conversion, e.g., pre-combustion emissions associated with fuel.",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 98,
    "model": "api.parameter",
    "fields": {
      "root": "costs.ch4",
      "category": "Emissions: CH4",
      "name": "om_prod",
      "pretty_name": "Post-process qty. per unit production",
      "timeseries_enabled": "True",
      "is_systemwide": false,
      "units": "kg/kWh",
      "description": "Emissions per unit energy content of carrier produced.",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 99,
    "model": "api.parameter",
    "fields": {
      "root": "costs.ch4",
      "category": "Emissions: CH4",
      "name": "purchase",
      "pretty_name": "Embodied qty. per technology unit",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "kg",
      "description": "If unit technology (integer technology representation) is being utilized, quantity of embodied emissions associated with one unit of the technology.",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 100,
    "model": "api.parameter",
    "fields": {
      "root": "costs.ch4",
      "category": "Emissions: CH4",
      "name": "resource_area",
      "pretty_name": "Area qty.",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "kg/m2",
      "description": "Embodied or one-time emissions per unit resource area utilized. May be useful for representing one-time emissions associated with, e.g., site preparation for the technology to be built.",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 101,
    "model": "api.parameter",
    "fields": {
      "root": "costs.ch4",
      "category": "Emissions: CH4",
      "name": "resource_cap",
      "pretty_name": "Embodied qty. per unit resource consumption capacity",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "kg/kW",
      "description": "Embodied or one-time emissions per unit resource consumption capacity. May be useful for, e.g, embodied emissions in the technology.",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 102,
    "model": "api.parameter",
    "fields": {
      "root": "costs.ch4",
      "category": "Emissions: CH4",
      "name": "storage_cap",
      "pretty_name": "Embodied qty. per unit storage capacity",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "kg/kWh",
      "description": "Embodied or one-time emissions per unit storage capacity. May be useful for, e.g, embodied emissions in the technology.",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 103,
    "model": "api.parameter",
    "fields": {
      "root": "costs.n2o",
      "category": "Emissions: N2O",
      "name": "energy_cap",
      "pretty_name": "Embodied qty. per unit production capacity",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "kg/kW",
      "description": "Embodied or one-time emissions per unit production capacity. May be useful for, e.g, embodied emissions in the technology.",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 104,
    "model": "api.parameter",
    "fields": {
      "root": "costs.n2o",
      "category": "Emissions: N2O",
      "name": "energy_cap_per_distance",
      "pretty_name": "Embodied qty. per distance",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "kg/kW/km",
      "description": "Embodied or one-time emissions per unit length/distance of transmission technology",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 105,
    "model": "api.parameter",
    "fields": {
      "root": "costs.n2o",
      "category": "Emissions: N2O",
      "name": "export",
      "pretty_name": "Post-process qty. per unit export",
      "timeseries_enabled": "True",
      "is_systemwide": false,
      "units": "kg/kWh",
      "description": "Emissions per unit energy content of, in particular, carrier exported. Note that carrier exported is always taken from carrier produced, so emissions associated with carrier produced are best associated with 'om_prod' and this should only be set if there are additional emissions associated with export.",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 106,
    "model": "api.parameter",
    "fields": {
      "root": "costs.n2o",
      "category": "Emissions: N2O",
      "name": "depreciation_rate",
      "pretty_name": "Depreciation Rate",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "",
      "description": "",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 107,
    "model": "api.parameter",
    "fields": {
      "root": "costs.n2o",
      "category": "Emissions: N2O",
      "name": "interest_rate",
      "pretty_name": "Interest Rate",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "",
      "description": "",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 108,
    "model": "api.parameter",
    "fields": {
      "root": "costs.n2o",
      "category": "Emissions: N2O",
      "name": "om_annual",
      "pretty_name": "Annual qty. per unit capacity",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "kg/kW/year",
      "description": "Fixed annual emissions per unit production capacity. Can be used, e.g., for fixed annual emissions associated with production capacity of the technology, or, e.g., if the technology uses resource area propoortional to capacity, annual emissions in proportion to resource area used.",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 109,
    "model": "api.parameter",
    "fields": {
      "root": "costs.n2o",
      "category": "Emissions: N2O",
      "name": "om_annual_investment_fraction",
      "pretty_name": "Annual qty. as fraction of embodied",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "%/year",
      "description": "Annual emissions as a fraction of embodied or one-time emissions associated wtih implementation of the technology.",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 110,
    "model": "api.parameter",
    "fields": {
      "root": "costs.n2o",
      "category": "Emissions: N2O",
      "name": "om_con",
      "pretty_name": "Pre-process qty. per unit consumption",
      "timeseries_enabled": "True",
      "is_systemwide": false,
      "units": "kg/kWh",
      "description": "Emissions per unit energy content of resource or consumption consumed. May be useful for pre-conversion, e.g., pre-combustion emissions associated with fuel.",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 111,
    "model": "api.parameter",
    "fields": {
      "root": "costs.n2o",
      "category": "Emissions: N2O",
      "name": "om_prod",
      "pretty_name": "Post-process qty. per unit production",
      "timeseries_enabled": "True",
      "is_systemwide": false,
      "units": "kg/kWh",
      "description": "Emissions per unit energy content of carrier produced.",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 112,
    "model": "api.parameter",
    "fields": {
      "root": "costs.n2o",
      "category": "Emissions: N2O",
      "name": "purchase",
      "pretty_name": "Embodied qty. per technology unit",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "kg",
      "description": "If unit technology (integer technology representation) is being utilized, quantity of embodied emissions associated with one unit of the technology.",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 113,
    "model": "api.parameter",
    "fields": {
      "root": "costs.n2o",
      "category": "Emissions: N2O",
      "name": "resource_area",
      "pretty_name": "Area qty.",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "kg/m2",
      "description": "Embodied or one-time emissions per unit resource area utilized. May be useful for representing one-time emissions associated with, e.g., site preparation for the technology to be built.",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 114,
    "model": "api.parameter",
    "fields": {
      "root": "costs.n2o",
      "category": "Emissions: N2O",
      "name": "resource_cap",
      "pretty_name": "Embodied qty. per unit resource consumption capacity",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "kg/kW",
      "description": "Embodied or one-time emissions per unit resource consumption capacity. May be useful for, e.g, embodied emissions in the technology.",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 115,
    "model": "api.parameter",
    "fields": {
      "root": "costs.n2o",
      "category": "Emissions: N2O",
      "name": "storage_cap",
      "pretty_name": "Embodied qty. per unit storage capacity",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "kg/kWh",
      "description": "Embodied or one-time emissions per unit storage capacity. May be useful for, e.g, embodied emissions in the technology.",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 116,
    "model": "api.parameter",
    "fields": {
      "root": "costs.co2e",
      "category": "Emissions: CO2e",
      "name": "energy_cap",
      "pretty_name": "Embodied qty. per unit production capacity",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "kg/kW",
      "description": "Embodied or one-time equivalent emissions per unit production capacity. May be useful for, e.g, embodied emissions in the technology.",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 117,
    "model": "api.parameter",
    "fields": {
      "root": "costs.co2e",
      "category": "Emissions: CO2e",
      "name": "energy_cap_per_distance",
      "pretty_name": "Embodied qty. per distance",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "kg/kW/km",
      "description": "Embodied or one-time equivalent emissions per unit length/distance of transmission technology",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 118,
    "model": "api.parameter",
    "fields": {
      "root": "costs.co2e",
      "category": "Emissions: CO2e",
      "name": "export",
      "pretty_name": "Post-process qty. per unit export",
      "timeseries_enabled": "True",
      "is_systemwide": false,
      "units": "kg/kWh",
      "description": "Equivalent emissions per unit energy content of, in particular, carrier exported. Note that carrier exported is always taken from carrier produced, so emissions associated with carrier produced are best associated with 'om_prod' and this should only be set if there are additional emissions associated with export.",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 119,
    "model": "api.parameter",
    "fields": {
      "root": "costs.co2e",
      "category": "Emissions: CO2e",
      "name": "depreciation_rate",
      "pretty_name": "Depreciation Rate",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "",
      "description": "",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 120,
    "model": "api.parameter",
    "fields": {
      "root": "costs.co2e",
      "category": "Emissions: CO2e",
      "name": "interest_rate",
      "pretty_name": "Interest Rate",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "",
      "description": "",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 121,
    "model": "api.parameter",
    "fields": {
      "root": "costs.co2e",
      "category": "Emissions: CO2e",
      "name": "om_annual",
      "pretty_name": "Annual qty. per unit capacity",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "kg/kW/year",
      "description": "Fixed annual equivalent emissions per unit production capacity. Can be used, e.g., for fixed annual emissions associated with production capacity of the technology, or, e.g., if the technology uses resource area propoortional to capacity, annual emissions in proportion to resource area used.",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 122,
    "model": "api.parameter",
    "fields": {
      "root": "costs.co2e",
      "category": "Emissions: CO2e",
      "name": "om_annual_investment_fraction",
      "pretty_name": "Annual qty. as fraction of embodied",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "%/year",
      "description": "Annual emissions as a fraction of embodied or one-time equivalent emissions associated wtih implementation of the technology.",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 123,
    "model": "api.parameter",
    "fields": {
      "root": "costs.co2e",
      "category": "Emissions: CO2e",
      "name": "om_con",
      "pretty_name": "Pre-process qty. per unit consumption",
      "timeseries_enabled": "True",
      "is_systemwide": false,
      "units": "kg/kWh",
      "description": "Equivalent emissions per unit energy content of resource or consumption consumed. May be useful for pre-conversion, e.g., pre-combustion emissions associated with fuel.",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 124,
    "model": "api.parameter",
    "fields": {
      "root": "costs.co2e",
      "category": "Emissions: CO2e",
      "name": "om_prod",
      "pretty_name": "Post-process qty. per unit production",
      "timeseries_enabled": "True",
      "is_systemwide": false,
      "units": "kg/kWh",
      "description": "Equivalent emissions per unit energy content of carrier produced.",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 125,
    "model": "api.parameter",
    "fields": {
      "root": "costs.co2e",
      "category": "Emissions: CO2e",
      "name": "purchase",
      "pretty_name": "Embodied qty. per technology unit",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "kg",
      "description": "If unit technology (integer technology representation) is being utilized, quantity of embodied equivalent emissions associated with one unit of the technology.",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 126,
    "model": "api.parameter",
    "fields": {
      "root": "costs.co2e",
      "category": "Emissions: CO2e",
      "name": "resource_area",
      "pretty_name": "Area qty.",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "kg/m2",
      "description": "Embodied or one-time equivalent emissions per unit resource area utilized. May be useful for representing one-time emissions associated with, e.g., site preparation for the technology to be built.",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 127,
    "model": "api.parameter",
    "fields": {
      "root": "costs.co2e",
      "category": "Emissions: CO2e",
      "name": "resource_cap",
      "pretty_name": "Embodied qty. per unit resource consumption capacity",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "kg/kW",
      "description": "Embodied or one-time equivalent emissions per unit resource consumption capacity. May be useful for, e.g, embodied emissions in the technology.",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  },
  {
    "pk": 128,
    "model": "api.parameter",
    "fields": {
      "root": "costs.co2e",
      "category": "Emissions: CO2e",
      "name": "storage_cap",
      "pretty_name": "Embodied qty. per unit storage capacity",
      "timeseries_enabled": "False",
      "is_systemwide": false,
      "units": "kg/kWh",
      "description": "Embodied or one-time equivalent emissions per unit storage capacity. May be useful for, e.g, embodied emissions in the technology.",
      "is_essential": false,
      "is_carrier": false,
      "choices": "[]"
    }
  }
]