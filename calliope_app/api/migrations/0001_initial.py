# Generated by Django 2.1.4 on 2019-06-13 20:56

from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Abstract_Tech',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('pretty_name', models.CharField(max_length=200)),
                ('image', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('icon', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'verbose_name_plural': '[Admin] Abstract Technologies',
                'db_table': 'abstract_tech',
            },
        ),
        migrations.CreateModel(
            name='Abstract_Tech_Param',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('default_value', models.CharField(max_length=200)),
                ('abstract_tech', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Abstract_Tech')),
            ],
            options={
                'verbose_name_plural': '[Admin] Abstract Technology Parameters',
                'db_table': 'abstract_tech_param',
            },
        ),
        migrations.CreateModel(
            name='Carrier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name_plural': '[0] Carriers',
                'db_table': 'carrier',
            },
        ),
        migrations.CreateModel(
            name='Loc_Tech',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'verbose_name_plural': '[3] Location Technologies',
                'db_table': 'loc_tech',
            },
        ),
        migrations.CreateModel(
            name='Loc_Tech_Param',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField()),
                ('value', models.CharField(max_length=200)),
                ('timeseries', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated', models.DateTimeField(auto_now=True, null=True)),
                ('loc_tech', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Loc_Tech')),
            ],
            options={
                'verbose_name_plural': '[3] Location Technology Parameters',
                'db_table': 'loc_tech_param',
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('pretty_name', models.CharField(max_length=200)),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('description', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'verbose_name_plural': '[1] Locations',
                'db_table': 'location',
            },
        ),
        migrations.CreateModel(
            name='Model',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('name', models.CharField(max_length=200)),
                ('power_units', models.CharField(default='kW', max_length=200)),
                ('temporal_resolution', models.CharField(default='hourly', max_length=200)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'verbose_name_plural': '[0] Models',
                'db_table': 'model',
            },
        ),
        migrations.CreateModel(
            name='Model_Favorite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Model')),
            ],
            options={
                'verbose_name_plural': '[0] Model Favorites',
                'db_table': 'model_favorite',
            },
        ),
        migrations.CreateModel(
            name='Model_User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('can_edit', models.BooleanField(default=True)),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Model')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': '[0] Model Users',
                'db_table': 'model_user',
            },
        ),
        migrations.CreateModel(
            name='Parameter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('root', models.CharField(max_length=200)),
                ('category', models.CharField(max_length=200)),
                ('name', models.CharField(max_length=200)),
                ('pretty_name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('timeseries_enabled', models.BooleanField()),
                ('units', models.CharField(max_length=200)),
                ('choices', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=10), size=None)),
            ],
            options={
                'verbose_name_plural': '[Admin] Parameters',
                'db_table': 'parameter',
            },
        ),
        migrations.CreateModel(
            name='Run',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subset_time', models.CharField(max_length=200)),
                ('year', models.IntegerField()),
                ('status', models.CharField(max_length=200)),
                ('inputs_path', models.TextField(blank=True)),
                ('logs_path', models.TextField(blank=True)),
                ('outputs_path', models.TextField(blank=True)),
                ('plots_path', models.TextField(blank=True)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated', models.DateTimeField(auto_now=True, null=True)),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Model')),
            ],
            options={
                'verbose_name_plural': '[5] Runs',
                'db_table': 'run',
            },
        ),
        migrations.CreateModel(
            name='Run_Parameter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('root', models.CharField(max_length=200)),
                ('name', models.CharField(max_length=200)),
                ('pretty_name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('user_visibility', models.BooleanField()),
                ('default_value', models.CharField(max_length=200)),
                ('choices', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=10), size=None)),
            ],
            options={
                'verbose_name_plural': '[Admin] Run Parameters',
                'db_table': 'run_parameter',
            },
        ),
        migrations.CreateModel(
            name='Scenario',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated', models.DateTimeField(auto_now=True, null=True)),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Model')),
            ],
            options={
                'verbose_name_plural': '[4] Scenarios',
                'db_table': 'scenario',
            },
        ),
        migrations.CreateModel(
            name='Scenario_Loc_Tech',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('loc_tech', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Loc_Tech')),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Model')),
                ('scenario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Scenario')),
            ],
            options={
                'verbose_name_plural': '[4] Scenario Location Technologies',
                'db_table': 'scenario_loc_tech',
            },
        ),
        migrations.CreateModel(
            name='Scenario_Param',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=200)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated', models.DateTimeField(auto_now=True, null=True)),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Model')),
                ('run_parameter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Run_Parameter')),
                ('scenario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Scenario')),
            ],
            options={
                'verbose_name_plural': '[4] Scenario Parameters',
                'db_table': 'scenario_param',
            },
        ),
        migrations.CreateModel(
            name='Tech_Param',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField()),
                ('value', models.CharField(max_length=200)),
                ('timeseries', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated', models.DateTimeField(auto_now=True, null=True)),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Model')),
                ('parameter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Parameter')),
            ],
            options={
                'verbose_name_plural': '[2] Technology Parameters',
                'db_table': 'tech_param',
            },
        ),
        migrations.CreateModel(
            name='Technology',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('pretty_name', models.CharField(max_length=200)),
                ('tag', models.CharField(blank=True, max_length=200, null=True)),
                ('pretty_tag', models.CharField(blank=True, max_length=200, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated', models.DateTimeField(auto_now=True, null=True)),
                ('abstract_tech', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Abstract_Tech')),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Model')),
            ],
            options={
                'verbose_name_plural': '[2] Technologies',
                'db_table': 'technology',
            },
        ),
        migrations.CreateModel(
            name='Timeseries',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField()),
                ('value', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name_plural': '[3] Timeseries',
                'db_table': 'timeseries',
            },
        ),
        migrations.CreateModel(
            name='Timeseries_Meta',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Model')),
            ],
            options={
                'verbose_name_plural': '[3] Timeseries Meta',
                'db_table': 'timeseries_meta',
            },
        ),
        migrations.CreateModel(
            name='User_File',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filename', models.FileField(upload_to='user_files/')),
                ('description', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Model')),
            ],
            options={
                'verbose_name_plural': '[0] User File Uploads',
                'db_table': 'user_file',
            },
        ),
        migrations.AddField(
            model_name='timeseries',
            name='meta',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Timeseries_Meta'),
        ),
        migrations.AddField(
            model_name='tech_param',
            name='technology',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Technology'),
        ),
        migrations.AddField(
            model_name='run',
            name='scenario',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Scenario'),
        ),
        migrations.AddField(
            model_name='model_favorite',
            name='parameter',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Parameter'),
        ),
        migrations.AddField(
            model_name='location',
            name='model',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Model'),
        ),
        migrations.AddField(
            model_name='loc_tech_param',
            name='model',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Model'),
        ),
        migrations.AddField(
            model_name='loc_tech_param',
            name='parameter',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Parameter'),
        ),
        migrations.AddField(
            model_name='loc_tech',
            name='location_1',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='location_1', to='api.Location'),
        ),
        migrations.AddField(
            model_name='loc_tech',
            name='location_2',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='location_2', to='api.Location'),
        ),
        migrations.AddField(
            model_name='loc_tech',
            name='model',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Model'),
        ),
        migrations.AddField(
            model_name='loc_tech',
            name='technology',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Technology'),
        ),
        migrations.AddField(
            model_name='carrier',
            name='model',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Model'),
        ),
        migrations.AddField(
            model_name='abstract_tech_param',
            name='parameter',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Parameter'),
        ),
    ]
